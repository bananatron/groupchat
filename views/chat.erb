

<chat-window>
  <messages>
  
  </messages>
</chat-window>


<% if @username %>

    <div class="submit-container">
      <div class='textmock' contenteditable></div>
      <!--  <div class="submit_button">Submit</div>-->
      <div class="submit-button"><div>GO</div></div>
      <!--<button class="stickers-modal-button">Stickers</button>-->
    </div>
    
    
    <!--<div id="dialog">-->
    <!--  <strong>Choose Your Sticker</strong>-->
    <!--  <ul class="stickerImages"></ul>-->
    <!--</div>-->

<% else %>
    
    <h2 style="color:rgba(255, 255, 255, 0.5)">Join the conversation by <a href="/login">logging in</a> or <a href="/register">signing up.</a></h2>

<% end %>


<div class="visibility-container">
  
  <% if @private %>
    
    <% if @admin %>
    <div class="admin-button-container">
      <button class="admin-button bg-green" id="admin-add-user"><i class="fa fa-plus"></i></button>
      <button class="admin-button bg-red" id="admin-remove-user"><i class="fa fa-times"></i></button>
      <button class="admin-button bg-blue" id="admin-help"><i class="fa fa-question"></i></button>
    </div>
    <% end %>
  
      <i class="fa fa-eye"></i> <span class="users-in-room"></span>
      
  <% else %>
  
      <i class="fa fa-eye"></i> PUBLIC CHAT
      
  <% end %>
  
  
</div>





<script src="https://cdn.firebase.com/js/client/2.2.7/firebase.js"></script>
<!-- jQuery UI added for dialog box -->
<script src="https://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>


<script>



  
  
  var userName = $('.user-data').text();
  var MESSAGE_LIMIT = 40;
  var date = new Date();
  var month_time = date.getMonth().toString() + date.getYear().toString();
  var room_name = $('.room-name').text().toLowerCase();
  var admin = false;
  var usersGlobal = new Firebase("https://h4xchat.firebaseio.com/users");
  var usersChat = new Firebase("https://h4xchat.firebaseio.com/chats/"+ room_name + "/users");
  var firebaseRef = new Firebase("https://h4xchat.firebaseio.com/chats/" + room_name.toLowerCase()+ "/messages/" + month_time);
  
  if ($('.admin-button-container').length > 0) admin = true;
  
  
  //Pull messages and start listening
  firebaseRef.limitToLast(MESSAGE_LIMIT).on('child_added', function(child) {
  
    var msg = child.val();
    createMessage(msg.message, Object.getOwnPropertyNames(msg), msg.timestamp, msg.author );
    
  }, function (errorObject) {
    console.log("The read failed: " + errorObject.code);
  });
  

  //User visibility live updates below chat text box
  usersChat.on("value", function(snapshot) {
    
      var ulist = snapshot.val();
      $('.users-in-room').empty();
      
      $.each(ulist, function( username, user_data ) {
        
        var user_entry = this.view = document.createElement("span");
        user_entry.setAttribute('class', 'user-visible');
        user_entry.innerHTML = username;
        if (user_data.admin == true) $(user_entry).addClass( 'user-admin');
        
        $(user_entry).appendTo('.users-in-room');
  
      });

      //Attach click handler
      $('.user-visible').click(function(){
        $('.textmock').text($('.textmock').text() + '@' + $(this).text().toString().replace("*","") + ' ');
      });
  
  }, function (errorObject) {
      console.log("The read failed on usersChat: " + errorObject.code);
  });

  setTimeout(function(){ scrollToBottom() }, 1000);
  

  ////////////////////
  // CLICKY THANGS //
  //////////////////
  
  //Submit button
  $(".submit-button").click(function() { 
    sendMessage();
  });
  
  //Enter key submit
  $(".textmock").keyup(function (e) {
    if (e.keyCode == 13 && event.shiftKey != true) sendMessage(); //Allows shift - !! still doesn't put \n
  });

  //Admin click handlers
  $("#admin-add-user").click(function(){
    $('.textmock').text( "/add [username]");
  });
  
  $("#admin-remove-user").click(function(){
    $('.textmock').text( "/remove [username]");
  });
  
  $("#admin-help").click(function(){
    $('.textmock').text( "/help");
  });
  
  
  
  
  
  ///////////////
  // HELPERS ///
  /////////////
  
  function scrollToBottom(){
    var height_total = 0;
    
    $('messages').children().each(function( index ) {
      height_total += $(this).height();
    });
    console.log(height_total);
    $("chat-window").animate({ scrollTop: height_total + 200 }, 500);
  }
    
  //Sends message to firebase
  var sendMessage = function(){

    if ($('.textmock').text().trim() == "") return false; //If not blank
     
    if ($('.textmock').text().trim().indexOf('/') == 0){ //Slash command prob will abstract this out
    
      var cmd_string = $('.textmock').text().trim().replace("/","");
      var cmd = cmd_string.split(" ")[0];
      var arg = cmd_string.split(" ")[1];
      
      switch(cmd) {
        case "help":
          msg = "Try some of these commands out: ";
          if (admin == true) {
            msg += "<br><br>It also looks like you're an admin for this room. You can <b>/add</b> and <b>/remove</b> people from the channel,"
            msg += " as well as change the channel's privacy settings with <b>/room public</b> or <b>/room private</b> (Private doesn't work yet)."
          }
        break;
        
        case "add":
          $.post( "/admin/add", { user: arg, room: room_name })
          .done(function( data ) {
            firebaseRef.push({
              message: cleanMessage(data),
              timestamp: getDate(),
              author: 'System'
            });
          });
          msg = "";
        break;
        
        case "remove":
          $.post( "/admin/remove", { user: arg, room: room_name })
          .done(function( data ) {
            firebaseRef.push({
              message: cleanMessage(data),
              timestamp: getDate(),
              author: 'System'
            });
          });
          msg = "";
        break;
        
        default:
          msg = "No such command.";
      }
      
      if (arg == undefined && cmd != "help"){
        msg = "No argument sent with command."
      } 
      
      //createMessage(message, id, time, author)
      if (msg.trim() != "" && msg != undefined){
        createMessage(msg, 'sys', getDate(), 'System (Private)')
      }
      console.log(msg);
      $('.textmock').empty();
    
    
    } else { //Non-slash command (normal message)
    
      firebaseRef.push({
        message: cleanMessage($('.textmock').text()),
        timestamp: getDate(),
        author: $('.user-data-1').text()
      });
      
      $('.textmock').empty(); //Empty field
      var scrollBottom = $('chat-window').scrollTop() + $('chat-window').height();
      
    }
    
      scrollToBottom();
      
    
  };
  
  

  
  var esctags = ['a', 'javascript', 'marquee'] //Maybe use an array to go through the tags for removal? idk
  var cleanMessage = function(message){ //TODO !! make this actually work well
    
    
    
    var msg = message;
    msg = msg.replace('<','');
    msg = msg.replace('>','');
    msg = msg.replace('/>','');
    
    
    if ( msg.endsWith('.gif') || msg.endsWith('.jpg') || msg.endsWith('.gifv') || msg.endsWith('.png')){
      msg = "{img}" + msg;
    }   

    return addLinks(msg);
    
  };
  
  
  //Convert links to actual links (http + www)
  var addLinks = function(text, classname) {
      var url1 = /(^|&lt;|\s)(www\..+?\..+?)(\s|&gt;|$)/g,
      url2 = /(^|&lt;|\s)(((https?|ftp):\/\/|mailto:).+?)(\s|&gt;|$)/g;
  
      if(typeof classname === 'undefined') classname = "";
      var html = $.trim(text);
      if (html) {
          html = html
              .replace(url1, '$1<a class="' + classname + '" target="_blank"  href="http://$2">$2</a>$3')
              .replace(url2, '$1<a class="' + classname + '" target="_blank"  href="$2">$2</a>$5');
      }
      return html;
  }
  
  //Creates message and appends to messages box
  var createMessage = function(message, id, time, author){
    
    var msg = this.view = document.createElement("message");
    msg.setAttribute('id', id);
    
    var aa = msg.appendChild(document.createElement("div"));
    aa.setAttribute('class', 'author');
    aa.innerHTML = author;
    if (author.indexOf('System')== -1) {
      var uu = new Firebase(usersGlobal + '/' + author);
      uu.once("value", function(data) {
        aa.setAttribute('style', 'background-color:#'+ data.val().color)
      });

    }
    
    
    var mm = msg.appendChild(document.createElement("div"));
    mm.setAttribute('class', 'message');
    
    if(message.startsWith('{img}')){ //Image post
    
      image_link = message.replace("{img}","");
      mm.innerHTML = addLinks(image_link, 'image-link');
      mm.innerHTML += "<img class='inline-image' src='" + image_link + "'/>";
    } else { //Non image
      mm.innerHTML = message;
    }
    
    var tt = msg.appendChild(document.createElement("div"));
    tt.setAttribute('class', 'timestamp');
    tt.innerHTML = time;
 
    $(msg).appendTo('messages');
    
  };
  
  
  var getDate = function(){
    var dt = new Date();
    //var dlit = dt.toDateString();
    return dt.getMonth() + '/' + dt.getDay() + '/' + dt.getFullYear() + ' ' + dt.getHours() + ':' + dt.getMinutes();
  }


  // //Create eventListner for onclick event of stickers button
  // $('.stickers-modal-button').on('click', function(e) {
  //   var connectionStr = 'http://api.flickr.com/services/feeds/photos_public.gne?format=json&tags=pugs&jsoncallback=?';
  //   var $img = $("<img>");
  //   var maxNumOfImages = 10;
  //   $.getJSON(connectionStr, function(data) {
  //       //Loop through each item of the response
  //       data.items.forEach(function(photo) {
  //         //Initialize the $img obj to blank <img> tag
  //         $img = $("<img>").addClass('stickerItem');
  //         if(maxNumOfImages === 0) {
  //           return;
  //         }
  //         //Append the img URL to $img obj
  //         $img.attr("src", photo.media.m);
  //         $li = $("<li>").addClass('stickerItem');

  //         $li.append($img)
  //         $(".stickerImages").append($li);
  //         maxNumOfImages--;
  //       });        
  //   });
  //   $('#dialog').css('display', 'block');
  // });



</script>


